# name: Deploy From GitHub to EC2
# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Deploy on EC2
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             # Install deps if missing
#             if ! command -v docker &> /dev/null; then
#               sudo apt-get update
#               sudo apt-get install -y docker.io git-lfs
#               sudo systemctl enable docker
#               sudo systemctl start docker
#               git lfs install
#             fi

#             # Clone or update repo
#             # Clone or update repo using SSH
#             if [ ! -d "/home/ubuntu/app/.git" ]; then
#               git clone git@github.com:Amadabh/image-caption.git /home/ubuntu/app
#             else
#               cd /home/ubuntu/app && git fetch origin && git reset --hard origin/main
#             fi
#             sudo docker system prune -a -f


#             # Ensure LFS files are pulled
#             cd /home/ubuntu/app
#             git lfs pull
#             ls -lh 

#             # Rebuild + restart container
#             sudo docker build -t myapp .
#             sudo docker stop myapp-container || true
#             sudo docker rm myapp-container || true
#             sudo docker run -d \
#             --name myapp-container \
#             -p 8000:8000 -p 8501:8501 \
#             -v /home/ubuntu/app/onnx-image-captioning-model-quantized.tar.gz:/app/onnx-image-captioning-model-quantized.tar.gz \
#             myapp


name: Deploy From GitHub to EC2
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install deps if missing
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io git-lfs
              sudo systemctl enable docker
              sudo systemctl start docker
              git lfs install
            fi

            # Clone or update repo
            if [ ! -d "/home/ubuntu/app/.git" ]; then
              git clone git@github.com:Amadabh/image-caption.git /home/ubuntu/app
            else
              cd /home/ubuntu/app && git fetch origin && git reset --hard origin/main
            fi

            # Ensure LFS files are pulled
            cd /home/ubuntu/app
            git lfs pull
            ls -lh 

            # Extract ONNX model if folder doesn't exist
            if [ ! -d "/home/ubuntu/app/onnx-image-captioning-model-quantized" ]; then
              echo "Extracting ONNX model..."
              tar -xzf onnx-image-captioning-model-quantized.tar.gz
              rm -f onnx-image-captioning-model-quantized.tar.gz
            else
              echo "ONNX folder exists, skipping extraction"
            fi

            # Clean old containers/images
            sudo docker system prune -a -f
            sudo docker stop myapp-container || true
            sudo docker rm myapp-container || true

            # Rebuild Docker image
            sudo docker build -t myapp .

            # Run container with volume mount for ONNX model
            sudo docker run -d \
              --name myapp-container \
              -p 8000:8000 -p 8501:8501 \
              -v /home/ubuntu/app/onnx-image-captioning-model-quantized:/app/onnx-image-captioning-model-quantized \
              myapp

